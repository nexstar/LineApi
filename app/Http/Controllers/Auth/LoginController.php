<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Foundation\Auth\AuthenticatesUsers;

class LoginController extends Controller
{
    /*
    |--------------------------------------------------------------------------
    | Login Controller
    |--------------------------------------------------------------------------
    |
    | This controller handles authenticating users for the application and
    | redirecting them to your home screen. The controller uses a trait
    | to conveniently provide its functionality to your applications.
    |
    */

    use AuthenticatesUsers;

    /**
     * Where to redirect users after login.
     *
     * @var string
     */
    protected $redirectTo = '/home';

    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        $this->middleware('guest')->except('logout');
    }

    // 20190525 Line Login
    // 繼承showLoginForm　
    public function showLoginForm()
    {
        // Line Login authorization request
        $url = 'https://access.line.me/oauth2/v2.1/authorize';
        $url .= '?response_type=code'; // This tells the LINE Platform to return an authorization code.
        $url .= '&client_id='.env('LINE_CLIENT_ID'); // Channel ID
        $url .= '&redirect_uri='.env('LINE_CALLBACK_URL'); // Callback URL
        $url .= '&state='.$this->randtext(6); // A unique alphanumeric string used to prevent cross-site request forgery. This value should be randomly-generated by your application. Cannot be a URL-encoded string
        $url .= '&scope=email%20openid%20profile'; // Permissions granted by the user. You can specify multiple scopes using the URL encoded whitespace character (%20)
        $url .= '&nonce='.$this->randtext(6); // A string used to prevent replay attacks. This value is returned in an ID token
        $url .= '&prompt=consent'; // Used to force the consent screen to be displayed even if the user has already granted all requested permissions
//        $url .= '&max_age=number'; // The allowable elapsed time in seconds since the last time the user was authenticated. Corresponds to the max_age parameter defined in the "Authentication Request" section of OpenID Connect Core 1.0
//        $url .= '&ui_locales=string'; // Display language for LINE Login screens. Specify as one or more RFC 5646 (BCP 47) language tags, separated by spaces, in order of preference. Corresponds to the ui_locales parameter defined in the "Authentication Request" section of OpenID Connect Core 1.0
        $url .= '&bot_prompt=normal'; // Displays an option to add a LINE official account as a friend during login. Set value to either normal or aggressive
        // Line Login authorization request

        return view('auth.login', compact('url'));
    }
    // 繼承showLoginForm

    // 產生亂數
    private function randtext($length) {
        $password_len = $length;    //字串長度
        $password = '';
        $word = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';   //亂數內容
        $len = strlen($word);
        for ($i = 0; $i < $password_len; $i++) {
            $password .= $word[rand() % $len];
        }
        return $password;
    }
    // 產生亂數
    // 20190525 Line Login
}
